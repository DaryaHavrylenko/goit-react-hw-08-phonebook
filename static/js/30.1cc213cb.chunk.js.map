{"version":3,"file":"static/js/30.1cc213cb.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/nanoid/index.browser.js","../node_modules/@chakra-ui/toast/dist/chunk-BXBGUOGI.mjs","components/Form/Form.jsx","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","pages/ContactsList.js"],"sourcesContent":["export const getContact = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import {\n  createToastFn\n} from \"./chunk-RANSABEB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(defaultOptions) {\n  const { theme } = useChakra();\n  return useMemo(\n    () => createToastFn(theme.direction, defaultOptions),\n    [defaultOptions, theme.direction]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Input } from '@chakra-ui/react';\n//import { FormPhonebook, Label, Input, Button } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContact } from 'redux/contacts/selectors';\nimport { Box, Flex, Button, FormLabel } from '@chakra-ui/react';\nimport { useToast } from '@chakra-ui/react';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContact);\n  const toast = useToast();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const correctName = name.toLowerCase();\n\n    const IsContactList = contacts.find(\n      contact => contact.name.toLowerCase() === correctName\n    );\n\n    IsContactList\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number, id: nanoid() }));\n    if (!IsContactList) {\n      setName('');\n      setNumber('');\n    }\n  };\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        console.log('Invalid subscription type');\n    }\n  };\n\n  const modelId = nanoid();\n  const numberId = nanoid();\n\n  return (\n    <Box as=\"section\" pt=\"10\">\n      <Flex justifyContent=\"center\">\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n          <FormLabel htmlFor={modelId}>Name</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n            id={modelId}\n          />\n          <FormLabel htmlFor={numberId}>Number</FormLabel>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n            id={numberId}\n          />\n          <Button\n            type=\"submit\"\n            mt=\"5\"\n            onClick={() =>\n              toast({\n                title: 'Your contact is adding.',\n                status: 'success',\n                duration: 9000,\n                isClosable: true,\n              })\n            }\n          >\n            Add contact\n          </Button>\n        </form>\n      </Flex>\n    </Box>\n  );\n};\n// };\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","//import PropTypes from 'prop-types';\n//mport { List, Item, Text, Button } from './Contacts.styled';\nimport { Button, UnorderedList, ListItem } from '@chakra-ui/react';\nimport { getContact, getFilter } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n\n  const filter = useSelector(getFilter);\n  const normFilter = filter.toLowerCase();\n  const filterContactList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normFilter)\n  );\n\n  return (\n    <UnorderedList>\n      {filterContactList.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <Button\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </UnorderedList>\n  );\n};\n\n// Contacts.propTypes = {\n//     contacts: PropTypes.arrayOf(PropTypes.object),\n\n// }\n","//import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { Label, Input } from './Filter.styled';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { filterContact } from '../../redux/contacts/filterSlice';\nimport { Input, FormLabel } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const getFilterValue = e => {\n    return dispatch(filterContact(e.target.value));\n  };\n  return (\n    <>\n      <FormLabel>Find contacts by name</FormLabel>\n      <Input\n        w=\"100\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getFilterValue}\n      />\n    </>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { getIsLoading } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Form } from '../components/Form/Form';\nimport { Contacts } from '../components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Form />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <Contacts />\n    </>\n  );\n}\n"],"names":["getContact","state","contacts","items","getFilter","filter","getIsLoading","isLoading","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useToast","defaultOptions","theme","useChakra","useMemo","createToastFn","direction","Form","useState","name","setName","number","setNumber","useSelector","toast","dispatch","useDispatch","handleChange","e","target","value","console","log","modelId","numberId","as","pt","justifyContent","autoComplete","onSubmit","preventDefault","correctName","toLowerCase","IsContactList","find","contact","alert","addContact","htmlFor","I","type","pattern","title","required","onChange","mt","onClick","status","duration","isClosable","createContext","errorMessage","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","children","styleType","stylePosition","spacing","rest","validChildren","getValidChildren","spacingStyle","jsx","chakra","listStyleType","listStylePosition","role","__css","container","displayName","marginStart","UnorderedList","ListItem","item","Icon","icon","Contacts","normFilter","filterContactList","includes","map","deleteContact","Filter","w","filterContact","ContactsList","useEffect","fetchContacts","Helmet"],"sourceRoot":""}