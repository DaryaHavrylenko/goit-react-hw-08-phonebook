{"version":3,"file":"static/js/665.98889ae4.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js","../node_modules/@chakra-ui/input/dist/chunk-MSKRUQCS.mjs","../node_modules/@chakra-ui/input/dist/chunk-ROYHMHZX.mjs","../node_modules/@chakra-ui/object-utils/dist/index.mjs"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport {\n  Input,\n  Box,\n  InputGroup,\n  InputRightElement,\n  Button,\n  FormLabel,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nexport const RegisterForm = () => {\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  const handleClick = () => setShow(!show);\n\n  return (\n    <Box as=\"section\" pt=\"10\">\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormLabel>\n          Username\n          <Input type=\"text\" name=\"name\" />\n        </FormLabel>\n        <FormLabel>\n          Email\n          <Input type=\"email\" name=\"email\" />\n        </FormLabel>\n        <FormLabel>\n          Password\n          <InputGroup>\n            <Input type={show ? 'text' : 'password'} name=\"password\" />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormLabel>\n        <Button type=\"submit\" mt=\"10\">\n          Register\n        </Button>\n      </form>\n    </Box>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n","import {\n  useInputGroupStyles\n} from \"./chunk-ROYHMHZX.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n","// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\"\n        },\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n","// src/index.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\nfunction pick(object, keysToPick) {\n  const result = {};\n  for (const key of keysToPick) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\nexport {\n  compact,\n  omit,\n  pick,\n  split\n};\n"],"names":["RegisterForm","useState","show","setShow","dispatch","useDispatch","as","pt","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","I","type","width","h","size","onClick","mt","Register","Helmet","StyledInputElement","chakra","baseStyle","display","alignItems","justifyContent","position","top","zIndex","InputElement","forwardRef","props","ref","_a","_b","placement","rest","styles","useInputGroupStyles","input","field","attr","elementStyles","height","fontSize","element","jsx","__css","id","displayName","InputLeftElement","className","_className","cx","InputRightElement","createContext","errorMessage","InputGroupStylesProvider","InputGroup","useMultiStyleConfig","omitThemingProps","children","groupStyles","validChildren","getValidChildren","forEach","child","paddingStart","paddingEnd","borderEndRadius","borderStartRadius","clones","map","theming","object","clone","Object","assign","key","compact","variant","cloneElement"],"sourceRoot":""}