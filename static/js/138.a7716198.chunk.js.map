{"version":3,"file":"static/js/138.a7716198.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/nanoid/index.browser.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/ContactsList.js"],"sourcesContent":["export const getContact = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from 'styled-components';\n\nexport const FormPhonebook = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n  width: 350px;\n  border-radius: 10px;\n  box-shadow: 10px 10px 58px 4px rgba(0,0,0,0.63);\n`;\n\nexport const Label = styled.label`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.list};\n  margin-bottom: ${p => p.theme.space[2]}px;\n  color: whitesmoke;\n`;\nexport const Input = styled.input`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  width: 300px;\n  border-radius: 4px;\n    border: transparent;\n  &:focus {\n    outline: none;\n    border: 2px solid;\n    border-color: #47feff;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Button = styled.button`\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[2]}px;\n  width: 100px;\n  font-size: ${p => p.theme.fontSizes.m};\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.md};\n  border: transparent;\n  &:hover {\n    background-color: #15d953;\n    border-color: #b3f9f6;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { FormPhonebook, Label, Input, Button } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContact } from 'redux/contacts/selectors';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContact);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const correctName = name.toLowerCase();\n    const IsContactList = contacts.find(\n      contact => contact.name.toLowerCase() === correctName\n    );\n\n    IsContactList\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number, id: nanoid() }));\n    if (!IsContactList) {\n      setName('');\n      setNumber('');\n    }\n  };\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        console.log('Invalid subscription type');\n    }\n  };\n\n  const modelId = nanoid();\n  const numberId = nanoid();\n\n  return (\n    <FormPhonebook autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label htmlFor={modelId}>Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n        id={modelId}\n      />\n      <Label htmlFor={numberId}>Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n        id={numberId}\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </FormPhonebook>\n  );\n};\n// };\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    list-style-type: square;\n    padding: 5px;\n`\nexport const Item = styled.li`\n   display: flex; \n   align-items: baseline;\n`\nexport const Text = styled.p`\n        font-size: ${p => p.theme.fontSizes.l};\n         font-weight: ${p => p.theme.fontWeights.list};\n         text-transform: capitalize;\n         color: #d8ddb3;\n      \n`\nexport const Button = styled.button`\ntext-align: center;\n    width: 100px;\n    height: 30px;\n    margin-left: ${p => p.theme.space[4]}px;\n        padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[2]}px;\n    border: ${p => p.theme.borders.normal};\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.md};\n  border: transparent;\n  &:hover {\n    background-color: #de6515;\n    border-color: #b3f9f6;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`","//import PropTypes from 'prop-types';\nimport { List, Item, Text, Button } from './Contacts.styled';\nimport { getContact, getFilter } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n\n  const filter = useSelector(getFilter);\n  const normFilter = filter.toLowerCase();\n  const filterContactList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normFilter)\n  );\n\n  return (\n    <List>\n      {filterContactList.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Text>\n            {name}: {number}\n          </Text>\n          <Button\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\n// Contacts.propTypes = {\n//     contacts: PropTypes.arrayOf(PropTypes.object),\n\n// }\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { getIsLoading } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Form } from '../components/Form/Form';\nimport { Contacts } from '../components/Contacts/Contacts';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Form />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Contacts />\n    </>\n  );\n}\n"],"names":["getContact","state","contacts","items","getFilter","filter","getIsLoading","isLoading","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","FormPhonebook","styled","p","theme","space","Label","fontSizes","l","fontWeights","list","Input","Button","m","colors","white","radii","md","Form","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","console","log","modelId","numberId","autoComplete","onSubmit","preventDefault","correctName","toLowerCase","IsContactList","find","contact","alert","addContact","htmlFor","type","pattern","title","required","onChange","List","Item","Text","borders","normal","Contacts","normFilter","filterContactList","includes","map","onClick","deleteContact","ContactsList","useEffect","fetchContacts","Helmet"],"sourceRoot":""}